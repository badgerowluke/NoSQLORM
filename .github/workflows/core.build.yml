on:
  push:
    branches:
      - trunk 


jobs:
  build:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0





    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'

    # Speed-up analysis by caching the scanner workspace
    - name: Cache SonarCloud workspace
      uses: actions/cache@v1
      with:
        path: ~\.sonar\cache
        key: ${{ runner.os }}-sonar-cache
        restore-keys: ${{ runner.os }}-sonar-cache        


    # Speed-up analysis by caching the scanner installation
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner        


    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: pwsh
      # The --version argument is optional. If it is omitted the latest version will be installed.
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner   


    - run: sed 's/TOKEN/%GITHUB_TOKEN%/'  ./nuget.config
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: build 
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        dotnet restore
        dotnet build --configuration Release --no-restore
        dotnet test --no-restore --verbosity normal  /p:CollectCoverage=true  /p:CoverletOutputFormat=cobertura /p:CoverletOutput=../TestResults/Coverage/coverage.cobertura.xml
        VERSION_TAG=$(git describe --tags)
        # dotnet pack -p:PackageId=NOSQLORM -p:PackageVersion=$VERSION_TAG --configuration Release --no-restore -o "../../packages"

        # dotnet nuget push ../../packages/*.nupkg  --source "github" -k $GITHUB_TOKEN



